
const translations = {
  ar: {
    title: "üîê ŸÖÿ≥ÿßÿπÿØ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±",
    specs: "üìù ŸÖŸàÿßÿµŸÅÿßÿ™ ÿßŸÑŸÉŸÑŸÖÿ© ÿßŸÑŸÇŸàŸäÿ©:",
    rule1: "‚úÖ ÿ£ŸÉÿ´ÿ± ŸÖŸÜ 6 ÿ≠ÿ±ŸàŸÅ",
    rule2: "‚úÖ ÿ≠ÿ±ŸÅ ŸÉÿ®Ÿäÿ± (ŸÖÿ´ŸÑ: A, B, C...)",
    rule3: "‚úÖ ÿ≠ÿ±ŸÅ ÿµÿ∫Ÿäÿ± (ŸÖÿ´ŸÑ: a, b, c...)",
    rule4: "‚úÖ ÿ±ŸÇŸÖ (ŸÖÿ´ŸÑ: 1, 2, 3...)", 
    rule5: "‚úÖ ÿ±ŸÖÿ≤ (ŸÖÿ´ŸÑ: !, @, #, $, ...)",
    genBtn: "üîÑ ÿ•ŸÜÿ¥ÿßÿ° ŸÉŸÑŸÖÿ© ŸÖÿ±Ÿàÿ± ŸÇŸàŸäÿ©",
    saveBtn: "üíæ ÿ≠ŸÅÿ∏ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±",
    showBtn: "üìÇ ÿπÿ±ÿ∂ ÿßŸÑŸÉŸÑŸÖÿßÿ™ ÿßŸÑŸÖÿ≠ŸÅŸàÿ∏ÿ©",
    clearBtn: "üóëÔ∏è ŸÖÿ≥ÿ≠ ŸÉŸÑ ÿßŸÑŸÉŸÑŸÖÿßÿ™",
    inputPlaceholder: "‚úèÔ∏è ÿßŸÉÿ™ÿ® ŸÉŸÑŸÖÿ© ŸÖÿ±Ÿàÿ± ŸÑÿßÿÆÿ™ÿ®ÿßÿ±Ÿáÿß",
    checkBtn: "üîç ÿßÿÆÿ™ÿ®ÿßÿ± ÿßŸÑŸÇŸàÿ©",
    result: "üí¨ ÿßŸÑŸÜÿ™Ÿäÿ¨ÿ© ÿ≥ÿ™ÿ∏Ÿáÿ± ŸáŸÜÿß",
    suggestions: "üí° ÿßŸÇÿ™ÿ±ÿßÿ≠ÿßÿ™ ŸÑŸÑÿ™ÿ≠ÿ≥ŸäŸÜ:",
    strength: {
      veryWeak: "‚ùå ÿ∂ÿπŸäŸÅÿ© ÿ¨ÿØŸãÿß",
      medium: "‚ö†Ô∏è ŸÖÿ™Ÿàÿ≥ÿ∑ÿ©",
      strong: "‚úÖ ŸÇŸàŸäÿ©"
    },
    improve: {
      length6: "‚û°Ô∏è ÿßÿ¨ÿπŸÑ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ± ÿ£ÿ∑ŸàŸÑ ŸÖŸÜ 6 ÿ£ÿ≠ÿ±ŸÅ.",
      length8: "‚û°Ô∏è ÿßÿ¨ÿπŸÑ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ± ÿ£ÿ∑ŸàŸÑ ŸÖŸÜ 8 ÿ£ÿ≠ÿ±ŸÅ.",
      upper: "‚û°Ô∏è ÿ£ÿ∂ŸÅ ÿ≠ÿ±ŸÅ ŸÉÿ®Ÿäÿ± (A-Z).",
      lower: "‚û°Ô∏è ÿ£ÿ∂ŸÅ ÿ≠ÿ±ŸÅ ÿµÿ∫Ÿäÿ± (a-z).",
      number: "‚û°Ô∏è ÿ£ÿ∂ŸÅ ÿ±ŸÇŸÖ (0-9).",
      symbol: "‚û°Ô∏è ÿ£ÿ∂ŸÅ ÿ±ŸÖÿ≤ ÿÆÿßÿµ (!@#$...)."
    },
    savedEmpty: "‚ùå ŸÑÿß ÿ™Ÿàÿ¨ÿØ ŸÉŸÑŸÖÿßÿ™ ŸÖÿ±Ÿàÿ± ŸÖÿ≠ŸÅŸàÿ∏ÿ©.",
    savedTitle: "üìÇ ÿßŸÑŸÉŸÑŸÖÿßÿ™ ÿßŸÑŸÖÿ≠ŸÅŸàÿ∏ÿ©:",
    savedDone: "‚úÖ ÿ™ŸÖ ÿ≠ŸÅÿ∏ ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±!",
    savedCleared: "üóëÔ∏è ÿ™ŸÖ ŸÖÿ≥ÿ≠ ÿ¨ŸÖŸäÿπ ŸÉŸÑŸÖÿßÿ™ ÿßŸÑŸÖÿ±Ÿàÿ±.",
    generated: "üîê ŸÉŸÑŸÖÿ© ÿßŸÑŸÖÿ±Ÿàÿ±: ",
    copied: "‚úÖ ÿ™ŸÖ ÿßŸÑŸÜÿ≥ÿÆ!"
  },
  en: {
    title: "üîê Password Assistant",
    specs: "üìù Strong password rules:",
    rule1: "‚úÖ More than 6 characters",
    rule2: "‚úÖ At least one uppercase letter (A-Z)",
    rule3: "‚úÖ At least one lowercase letter (a-z)",
    rule4: "‚úÖ At least one number (0-9)", 
    rule5: "‚úÖ At least one symbol (!, @, #, $, ...)",
    genBtn: "üîÑ Generate Strong Password",
    saveBtn: "üíæ Save Password",
    showBtn: "üìÇ Show Saved Passwords",
    clearBtn: "üóëÔ∏è Clear All Passwords",
    inputPlaceholder: "‚úèÔ∏è Enter a password to test",
    checkBtn: "üîç Check Strength",
    result: "üí¨ Result will appear here",
    suggestions: "üí° Suggestions to improve:",
    strength: {
      veryWeak: "‚ùå Very Weak",
      medium: "‚ö†Ô∏è Medium",
      strong: "‚úÖ Strong"
    },
    improve: {
      length6: "‚û°Ô∏è Make the password longer than 6 characters.",
      length8: "‚û°Ô∏è Make the password longer than 8 characters.",
      upper: "‚û°Ô∏è Add at least one uppercase letter (A-Z).",
      lower: "‚û°Ô∏è Add at least one lowercase letter (a-z).",
      number: "‚û°Ô∏è Add at least one number (0-9).",
      symbol: "‚û°Ô∏è Add at least one special symbol (!@#$...)."
    },
    savedEmpty: "‚ùå No saved passwords.",
    savedTitle: "üìÇ Saved Passwords:",
    savedDone: "‚úÖ Password saved!",
    savedCleared: "üóëÔ∏è All passwords cleared.",
    generated: "üîê Password: ",
    copied: "‚úÖ Copied!"
  }
};


let currentLang = localStorage.getItem("lang") || "ar";


function toggleLanguage() {
  currentLang = currentLang === "ar" ? "en" : "ar";
  localStorage.setItem("lang", currentLang); // ÿ™ÿÆÿ≤ŸäŸÜ ÿßŸÑŸÑÿ∫ÿ©
  applyTranslations(currentLang);
  document.getElementById("langBtn").innerText = currentLang === "ar" ? "English" : "Arabic";
}


function applyTranslations(lang) {
  document.querySelector("h2").innerText = translations[lang].title;
  document.querySelector("h3").innerText = translations[lang].specs;

  const rules = document.querySelectorAll(".rules li");
  rules[0].innerText = translations[lang].rule1;
  rules[1].innerText = translations[lang].rule2;
  rules[2].innerText = translations[lang].rule3;
  rules[3].innerText = translations[lang].rule4;
  rules[4].innerText = translations[lang].rule5;

  document.querySelector("button[onclick='generatePassword()']").innerText = translations[lang].genBtn;
  document.getElementById("saveBtn").innerText = translations[lang].saveBtn;
  document.querySelector("button[onclick='showSavedPasswords()']").innerText = translations[lang].showBtn;
  document.querySelector("button[onclick='clearAllPasswords()']").innerText = translations[lang].clearBtn;

  document.getElementById("userPassword").placeholder = translations[lang].inputPlaceholder;
  document.querySelector("button[onclick='checkPassword()']").innerText = translations[lang].checkBtn;

  document.getElementById("result").innerText = translations[lang].result;
  document.getElementById("suggestions").innerText = "";

  
  if (lang === "ar") {
    document.body.style.direction = "rtl";
    document.querySelector(".rules").style.textAlign = "right";
    document.getElementById("suggestions").style.textAlign = "right";
  } else {
    document.body.style.direction = "ltr";
    document.querySelector(".rules").style.textAlign = "left";
    document.getElementById("suggestions").style.textAlign = "left";
  }
}

window.onload = () => {
  applyTranslations(currentLang);
  document.getElementById("langBtn").innerText = currentLang === "ar" ? "English" : "Arabic";
};



function generatePassword() {
  const upper = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  const lower = "abcdefghijklmnopqrstuvwxyz";
  const numbers = "0123456789";
  const symbols = "!@#$%^&*()";

  let password = "";
  password += upper.charAt(Math.floor(Math.random() * upper.length));
  password += lower.charAt(Math.floor(Math.random() * lower.length));
  password += numbers.charAt(Math.floor(Math.random() * numbers.length));
  password += symbols.charAt(Math.floor(Math.random() * symbols.length));

  const all = upper + lower + numbers + symbols;
  for (let i = 4; i < 10; i++) {
    password += all.charAt(Math.floor(Math.random() * all.length));
  }

  password = password.split('').sort(() => Math.random() - 0.5).join('');

  document.getElementById("generated").innerText = translations[currentLang].generated + password;
  document.getElementById("saveBtn").style.display = "inline-block";
  document.getElementById("saveMsg").innerText = "";
}

function checkPassword() {
  const pw = document.getElementById("userPassword").value;
  let strength = "";
  let suggestions = [];

  const hasUpper = /[A-Z]/.test(pw);
  const hasLower = /[a-z]/.test(pw);
  const hasNumber = /[0-9]/.test(pw);
  const hasSymbol = /[!@#$%^&*()]/.test(pw);

  if (pw.length <= 6) {
    strength = translations[currentLang].strength.veryWeak;
    if (pw.length <= 6) suggestions.push(translations[currentLang].improve.length6);
    if (!hasUpper) suggestions.push(translations[currentLang].improve.upper);
    if (!hasLower) suggestions.push(translations[currentLang].improve.lower);
    if (!hasNumber) suggestions.push(translations[currentLang].improve.number);
    if (!hasSymbol) suggestions.push(translations[currentLang].improve.symbol);
  } else if (hasUpper && hasLower && hasNumber && hasSymbol && pw.length > 8) {
    strength = translations[currentLang].strength.strong;
  } else {
    strength = translations[currentLang].strength.medium;
    if (pw.length <= 8) suggestions.push(translations[currentLang].improve.length8);
    if (!hasUpper) suggestions.push(translations[currentLang].improve.upper);
    if (!hasLower) suggestions.push(translations[currentLang].improve.lower);
    if (!hasNumber) suggestions.push(translations[currentLang].improve.number);
    if (!hasSymbol) suggestions.push(translations[currentLang].improve.symbol);
  }

  document.getElementById("result").innerText = "üí¨ " + strength;

  if (suggestions.length > 0) {
    document.getElementById("suggestions").innerText = translations[currentLang].suggestions + "\n" + suggestions.join("\n");
  } else {
    document.getElementById("suggestions").innerText = "";
  }
}

function savePassword() {
  const pw = document.getElementById("generated").innerText.replace(translations[currentLang].generated, "");
  if (!pw) return;

  let savedPasswords = JSON.parse(localStorage.getItem("savedPasswords")) || [];
  savedPasswords.push(pw);

  localStorage.setItem("savedPasswords", JSON.stringify(savedPasswords));
  document.getElementById("saveMsg").innerText = translations[currentLang].savedDone;

  setTimeout(() => {
    document.getElementById("saveMsg").innerText = "";
  }, 2000);
}

function showSavedPasswords() {
  const savedPasswords = JSON.parse(localStorage.getItem("savedPasswords")) || [];
  const container = document.getElementById("savedList");

  if (savedPasswords.length === 0) {
    container.innerHTML = translations[currentLang].savedEmpty;

  
    setTimeout(() => {
      container.innerHTML = "";
    }, 2000);

    return;
  }

  container.innerHTML = "<h3>" + translations[currentLang].savedTitle + "</h3>";
  savedPasswords.forEach((pw, index) => {
    container.innerHTML += `
      <div style="margin:8px 0; padding:8px; border:1px solid #444; border-radius:8px; position:relative;">
        <span>üîë ${pw}</span>
        <button onclick="copyPassword('${pw}', ${index})" style="margin-left:10px; cursor:pointer;">üìã</button>
        <button onclick="deletePassword(${index})" style="margin-left:5px; cursor:pointer;">üóëÔ∏è</button>
        <div id="copyMsg-${index}" style="color:green; font-size:12px; margin-top:4px; display:none;"></div>
      </div>
    `;
  });
}

function copyPassword(text, index) {
  navigator.clipboard.writeText(text).then(() => {
    const msgEl = document.getElementById(`copyMsg-${index}`);
    msgEl.innerText = translations[currentLang].copied;
    msgEl.style.display = "block";

    setTimeout(() => {
      msgEl.style.display = "none";
    }, 2000);
  });
}

function deletePassword(index) {
  let savedPasswords = JSON.parse(localStorage.getItem("savedPasswords")) || [];
  savedPasswords.splice(index, 1);
  localStorage.setItem("savedPasswords", JSON.stringify(savedPasswords));
  showSavedPasswords();
}

function clearAllPasswords() {
  let savedPasswords = JSON.parse(localStorage.getItem("savedPasswords")) || [];

  if (savedPasswords.length === 0) {
    document.getElementById("savedList").innerText = translations[currentLang].savedEmpty;
    setTimeout(() => {
      document.getElementById("savedList").innerText = "";
    }, 2000);
    return;
  }

  localStorage.removeItem("savedPasswords");
  document.getElementById("savedList").innerText = translations[currentLang].savedCleared;

  setTimeout(() => {
    document.getElementById("savedList").innerText = "";
  }, 2000);
}
